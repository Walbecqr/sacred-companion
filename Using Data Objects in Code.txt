Using Data Objects in Code
import { createDataObject } from 'supabase-dataobject-helper';
import { DataObjectOptions, SupabaseConfig } from 'supabase-dataobject-helper/types';

// Configuration (stored securely by the extension)
const config: SupabaseConfig = {
    url: 'https://your-project.supabase.co',
    anonKey: 'your-anon-key'
};

// Define your data object
const userOptions: DataObjectOptions = {
    viewName: 'users',
    fields: [
        { name: 'id', type: 'number' },
        { name: 'email', type: 'string' },
        { name: 'name', type: 'string' }
    ],
    whereClauses: [
        { field: 'active', operator: 'equals', value: true }
    ],
    sort: { field: 'created_at', direction: 'desc' },
    recordLimit: 100,
    canInsert: true,
    canUpdate: true,
    canDelete: false
};

// Create and use the data object
const userDataObject = await createDataObject(config, userOptions);

// Listen for data changes (reactive)
userDataObject.onDataChanged((data) => {
    console.log('User data updated:', data);
    // Update your UI here
});

// Get current data
const users = userDataObject.getData();

// CRUD operations
await userDataObject.insert({ email: 'john@example.com', name: 'John Doe' });
await userDataObject.update(1, { name: 'John Smith' });
await userDataObject.delete(1);

// Manual refresh
await userDataObject.refresh();

// Clean up when done
userDataObject.dispose();
